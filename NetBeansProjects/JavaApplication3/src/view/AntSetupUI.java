/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import model.AntennaType;
import model.AntennaPower;

import controller.Controller;

/**
 *
 * @author mark
 */
public class AntSetupUI extends javax.swing.JFrame {
    private static Controller myController;
    
    /**
     * Creates new form AntSetupUI
     */
    public AntSetupUI(Controller c) {
        //this.myController = c;
        myController = c;
        initComponents();
        myController.addAntSetupView(this);
    }

    public int getAntNo() {
        return antNoComboBox.getSelectedIndex();
    }

    public void setAntNo(int antNo ) {
        antNoComboBox.setSelectedIndex(antNo);
    }
    
    public static AntennaType intToEnumAntennaType(int myInt) {
        switch (myInt) {
            case 0: return AntennaType.AlienPatch;       // zero to enum 1 (starting enum value in java)
            case 1: return AntennaType.Powercast;
            case 2: return AntennaType.Flexray;
            default: return AntennaType.AlienPatch;
        }
    }
    
    public AntennaType getAntType() {
        return intToEnumAntennaType(antTypeComboBox.getSelectedIndex());  // convert int to enum 
    }

    public void setAntType(AntennaType myEnum) {
        int myInt = myEnum.ordinal();
        antTypeComboBox.setSelectedIndex(myInt);
    }

    public static AntennaPower intToEnumAntennaPower(int myInt) {
        switch (myInt) {
            case 0: return AntennaPower.Power250MilliWatt;       // zero to enum 1 (starting enum value in java)
            case 1: return AntennaPower.Power1Watt;
            default: return AntennaPower.Power250MilliWatt;
        }
    }

    public AntennaPower getAntPower() {
        return intToEnumAntennaPower(antPowerComboBox.getSelectedIndex()); // convert int to enum
    }

    public void setAntPower(AntennaPower myEnum) {
        int myInt = myEnum.ordinal();
        antPowerComboBox.setSelectedIndex(myInt);
    }

    public int getAntThreshold() {
        return ((Integer) tagThresholdSpinner.getValue());
    }

    public void setAntThreshold(int myInt) {
        tagThresholdSpinner.setValue(myInt);
    }
    
    public int getAntTagTimeout() {
        return ((Integer) tagSecondsTimeoutSpinner.getValue());
    }

    public void setAntTagTimeout(int myInt) {
        tagSecondsTimeoutSpinner.setValue(myInt);
    }
    
    public void set_status_label(String myStg)
    {
        this.statusLabel.setText(myStg);
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        antSetupPanel = new javax.swing.JPanel();
        antTypeComboBox = new javax.swing.JComboBox<>();
        occupancyThresholdPreLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        acceptButton = new javax.swing.JButton();
        antNoLabel = new javax.swing.JLabel();
        antNoComboBox = new javax.swing.JComboBox<>();
        antTypeLabel1 = new javax.swing.JLabel();
        tagThresholdSpinner = new javax.swing.JSpinner();
        occupancyThresholdPostLabel = new javax.swing.JLabel();
        tagSecondsTimeoutSpinner = new javax.swing.JSpinner();
        tagTimeoutPreLabel = new javax.swing.JLabel();
        tagReadTimeoutPostLabel1 = new javax.swing.JLabel();
        readerNoLabel = new javax.swing.JLabel();
        readerNoComboBox = new javax.swing.JComboBox<>();
        statusLabel = new javax.swing.JLabel();
        antPowerComboBox = new javax.swing.JComboBox<>();
        antPowerLabel = new javax.swing.JLabel();

        setTitle("Antenna-Setup");

        antTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        antTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alien", "Powercast", "Flexray" }));
        antTypeComboBox.setActionCommand("antTypecomboBoxChanged");
        antTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antTypeComboBoxActionPerformed(evt);
            }
        });

        occupancyThresholdPreLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        occupancyThresholdPreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        occupancyThresholdPreLabel.setText("Occupancy Threshold:");

        backButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        backButton.setText("Back");
        backButton.setActionCommand("ButtonAntSetupBack");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        acceptButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        acceptButton.setText("Accept");
        acceptButton.setActionCommand("ButtonAntSetupAccept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        antNoLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        antNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        antNoLabel.setText("Antenna Number (0-3):");

        antNoComboBox.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        antNoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3" }));
        antNoComboBox.setActionCommand("AntNocomboBoxChanged");
        antNoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antNoComboBoxActionPerformed(evt);
            }
        });

        antTypeLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        antTypeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        antTypeLabel1.setText("Antenna Type:");

        tagThresholdSpinner.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        tagThresholdSpinner.setModel(new javax.swing.SpinnerNumberModel(100, 0, 200, 1));
        tagThresholdSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tagThresholdSpinnerStateChanged(evt);
            }
        });

        occupancyThresholdPostLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        occupancyThresholdPostLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        occupancyThresholdPostLabel.setText("In Number of Tags (0-200)");

        tagSecondsTimeoutSpinner.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        tagSecondsTimeoutSpinner.setModel(new javax.swing.SpinnerNumberModel(100, 0, 200, 1));

        tagTimeoutPreLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tagTimeoutPreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tagTimeoutPreLabel.setText("Tag Out Timeout:");

        tagReadTimeoutPostLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tagReadTimeoutPostLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tagReadTimeoutPostLabel1.setText("In Seconds (15-900)");

        readerNoLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        readerNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        readerNoLabel.setText("Reader:");

        readerNoComboBox.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        readerNoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));
        readerNoComboBox.setActionCommand("rederNocomboBoxChanged");
        readerNoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readerNoComboBoxActionPerformed(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        antPowerComboBox.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        antPowerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "250 mW", "1 W" }));
        antPowerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antPowerComboBoxActionPerformed(evt);
            }
        });

        antPowerLabel.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        antPowerLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        antPowerLabel.setText("Power Level:");

        javax.swing.GroupLayout antSetupPanelLayout = new javax.swing.GroupLayout(antSetupPanel);
        antSetupPanel.setLayout(antSetupPanelLayout);
        antSetupPanelLayout.setHorizontalGroup(
            antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(antSetupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(antSetupPanelLayout.createSequentialGroup()
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(antSetupPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(antSetupPanelLayout.createSequentialGroup()
                                    .addComponent(antNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(antNoComboBox, 0, 0, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, antSetupPanelLayout.createSequentialGroup()
                                    .addComponent(readerNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(readerNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(antSetupPanelLayout.createSequentialGroup()
                                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(antTypeLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                    .addComponent(antPowerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(antTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(antPowerComboBox, 0, 0, Short.MAX_VALUE)))))
                    .addGroup(antSetupPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(occupancyThresholdPreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tagTimeoutPreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tagSecondsTimeoutSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tagThresholdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tagReadTimeoutPostLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(occupancyThresholdPostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        antSetupPanelLayout.setVerticalGroup(
            antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(antSetupPanelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(readerNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readerNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(antNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(antNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(antTypeLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(antTypeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(antPowerComboBox)
                    .addComponent(antPowerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(occupancyThresholdPreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tagThresholdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(antSetupPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(occupancyThresholdPostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tagSecondsTimeoutSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tagTimeoutPreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(antSetupPanelLayout.createSequentialGroup()
                        .addComponent(tagReadTimeoutPostLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(antSetupPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(antSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, antSetupPanelLayout.createSequentialGroup()
                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(antSetupPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(antSetupPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readerNoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readerNoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_readerNoComboBoxActionPerformed

    private void tagThresholdSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tagThresholdSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tagThresholdSpinnerStateChanged

    private void antNoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antNoComboBoxActionPerformed
        // TODO add your handling code here:
        myController.guiActionPerformed(evt);
    }//GEN-LAST:event_antNoComboBoxActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        myController.guiActionPerformed(evt);
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        myController.guiActionPerformed(evt);
        //setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void antTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_antTypeComboBoxActionPerformed

    private void antPowerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antPowerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_antPowerComboBoxActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AntSetupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AntSetupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AntSetupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AntSetupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AntSetupUI(myController).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JComboBox<String> antNoComboBox;
    private javax.swing.JLabel antNoLabel;
    private javax.swing.JComboBox<String> antPowerComboBox;
    private javax.swing.JLabel antPowerLabel;
    private javax.swing.JPanel antSetupPanel;
    private javax.swing.JComboBox<String> antTypeComboBox;
    private javax.swing.JLabel antTypeLabel1;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel occupancyThresholdPostLabel;
    private javax.swing.JLabel occupancyThresholdPreLabel;
    private javax.swing.JComboBox<String> readerNoComboBox;
    private javax.swing.JLabel readerNoLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel tagReadTimeoutPostLabel1;
    private javax.swing.JSpinner tagSecondsTimeoutSpinner;
    private javax.swing.JSpinner tagThresholdSpinner;
    private javax.swing.JLabel tagTimeoutPreLabel;
    // End of variables declaration//GEN-END:variables
}
